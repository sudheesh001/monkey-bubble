## Process this file with automake to produce Makefile.in

#
# Targets
#

LIB_VERSION=0:0:0
LIB_VERSION_NUM=0.0.0

ORBIT_IDL = @ORBIT_IDL@

lib_LTLIBRARIES = libgnome-2.la

LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS) -o $@

libgnomeincludedir = $(includedir)/gnome/$(GNOME_INTERFACE_VERSION)/libgnome

INCLUDES = \
	-I..					\
	-I$(srcdir)/..				\
	$(WARN_CFLAGS)				\
	$(GLIB_CFLAGS)				\
	$(LIBGNOMESUPPORT_CFLAGS)		\
	$(LIBBONOBO_CFLAGS)			\
	$(OAF_CFLAGS)				\
	$(GCONF_CFLAGS)				\
	$(LIBXML_CFLAGS)			\
	$(GNOME_VFS_CFLAGS)			\
	-DLIBGNOME_PREFIX=\""$(prefix)"\"		\
	-DLIBGNOME_LIBDIR=\""$(libdir)"\"		\
	-DLIBGNOME_DATADIR=\""$(datadir)"\"		\
	-DLIBGNOME_BINDIR=\""$(bindir)"\"		\
	-DLIBGNOME_LOCALSTATEDIR=\""$(localstatedir)"\" \
	-DLIBGNOME_LOCALEDIR=\""$(gnomelocaledir)"\"	\
	-DLIBGNOME_SYSCONFDIR=\""$(sysconfdir)"\"	\
	-DVERSION=\""$(VERSION)"\"			\
	-DGNOMEVFSVERSION=\""$(GNOME_VFS_VERSION)"\" \
	-DG_LOG_DOMAIN=\"Gnome\"

CORBA_SOURCE =			\
	Gnome.h			\
	Gnome-common.c		\
	Gnome-stubs.c		\
	Gnome-skels.c

idls =							\
	$(top_srcdir)/idl/Gnome.idl			\
	$(top_srcdir)/idl/Gnome_Desktop.idl		\
	$(top_srcdir)/idl/Gnome_Selector.idl

idl_flags = -I $(datadir)/idl -D__GNOME_COMPILATION

$(CORBA_SOURCE): $(idls) $(ORBIT_IDL)
	$(ORBIT_IDL) $(top_srcdir)/idl/Gnome.idl -I$(top_srcdir)/idl $(idl_flags)

libgnome_src = \
	libgnometypebuiltins.h	\
	libgnometypebuiltins.c	\
	gnome-async-context.c	\
	gnome-program.c		\
	gnome-selector.c	\
	gnome-selector-factory.c\
	gnome-ditem.c		\
	gnome-exec.c		\
	gnome-fileconvert.c	\
	gnome-i18n.c		\
	gnome-regex.c		\
	gnome-url.c		\
	gnome-util.c		\
	gnome-preferences.c	\
	gnome-marshal-main.c	\
	libgnome-init.c

$(gnome2_src) : $(CORBA_SOURCE)
CLEANFILES += $(CORBA_SOURCE)

libgnome_2_la_SOURCES = \
	$(libgnome_src)		\
	$(CORBA_SOURCE)

libgnome_headers = \
	gnome-async-context.h	\
	gnome-program.h		\
	gnome-i18n.h		\
	gnome-fileconvert.h	\
	gnome-ditem.h		\
	gnome-exec.h		\
	gnome-regex.h		\
	gnome-triggers.h 	\
	gnome-url.h		\
	gnome-util.h   		\
	gnome-preferences.h	\
	gnome-marshal.h		\
	gnome-selector.h	\
	gnome-selectorP.h	\
	gnome-selector-factory.h\
	libgnome-init.h		\
	libgnome.h

libgnomeinclude_HEADERS = \
	Gnome.h			\
	libgnometypebuiltins.h	\
	$(libgnome_headers)

noinst_HEADERS = \
	gnome-selectorP.h	\
	gnome-triggersP.h	\
	libgnomeP.h

# all autogenerated files need to be generated in the srcdir,
# so old versions get remade and are not confused with newer
# versions in the build dir. thus a development setup requires
# srcdir to be writable, passing --disable-rebuilds to
# ../configure will supress all autogeneration rules.
$(srcdir)/stamp-libgnome.defs: @REBUILD@ Makefile.am libgnome.defs libgnome-boxed.defs $(libgnome_headers)
	cd $(srcdir) \
	&& glib-mkenums \
			--comments ";; @comment@" \
			--fprod "; enumerations from \"@filename@\"\n " \
			--vhead "(define-@type@ @EnumName@" \
			--vprod "   (@valuenick@ @VALUENAME@)" \
			--vtail ")" \
		$(libgnome_headers) > xgen-gdef \
	&& cat libgnome-boxed.defs >> xgen-gdef \
	&& (cmp -s xgen-gdef libgnome.defs || cp xgen-gdef libgnome.defs) \
	&& rm -f xgen-gdef \
	&& echo timestamp > $(@F)

$(srcdir)/libgnometypebuiltins.c: @REBUILD@ Makefile.am $(libgnome_headers)
	cd $(srcdir) \
	&& glib-mkenums \
			--fhead "#include <gobject/genums.h>\n" \
			--fhead "#include \"libgnometypebuiltins.h\"\n\n" \
			--fprod "\n/* enumerations from \"@filename@\" */" \
			--vhead "static const G@Type@Value _@enum_name@_values[] = {" \
			--vprod "  { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
			--vtail "  { 0, NULL, NULL }\n};\n\n" \
			--vtail "GType\n@enum_name@_get_type (void)\n{\n" \
			--vtail "  static GType type = 0;\n\n" \
			--vtail "  if (!type)\n" \
			--vtail "    type = g_@type@_register_static (\"@EnumName@\", _@enum_name@_values);\n\n" \
			--vtail "  return type;\n}\n\n" \
		$(libgnome_headers) > xgen-gtbec \
	&& cp xgen-gtbec $(@F) \
	&& rm -f xgen-gtbec

$(srcdir)/libgnometypebuiltins.h: @REBUILD@ Makefile.am $(libgnome_headers)
	cd $(srcdir) \
	&& glib-mkenums \
			--fhead "#ifndef __LIBGNOMETYPEBUILTINS_H__\n" \
			--fhead "#define __LIBGNOMETYPEBUILTINS_H__ 1\n\n" \
			--fhead "#include <libgnome/libgnome.h>\n\n" \
			--fhead "G_BEGIN_DECLS\n\n" \
			--ftail "G_END_DECLS\n\n" \
			--ftail "#endif /* __LIBGNOMETYPEBUILTINS_H__ */\n" \
			--fprod "\n/* --- @filename@ --- */" \
			--eprod "#define GNOME_TYPE_@ENUMSHORT@ @enum_name@_get_type()\n" \
			--eprod "GType @enum_name@_get_type (void);\n" \
		$(libgnome_headers) > xgen-gth \
	&& cp xgen-gth $(@F) \
	&& rm -f xgen-gth

$(srcdir)/stamp-gnome-marshal.h: gnome-marshal.list
	cd $(srcdir) \
	&& glib-genmarshal --prefix=gnome_marshal gnome-marshal.list --header >> xgen-gmh \
	&& (cmp -s xgen-gmh gnome-marshal.h || cp xgen-gmh gnome-marshal.h) \
	&& rm -f xgen-gmh xgen-gmh~ \
	&& echo timestamp > $(@F)

$(srcdir)/gnome-marshal.h $(srcdir)/gnome-marshal.c: stamp-gnome-marshal.h
	cd $(srcdir) \
	&& glib-genmarshal --prefix=gnome_marshal gnome-marshal.list --body >> xgen-gmc \
	&& cp xgen-gmc gnome-marshal.c \
	&& rm -f xgen-gmc xgen-gmc~

EXTRA_DIST = \
	libgnome-2.0.pc.in

BUILT_SOURCES = \
	libgnometypebuiltins.h		\
	libgnometypebuiltins.c		\
	gnome-marshal.h			\
	gnome-marshal.c			\
	$(CORBA_SOURCE)

libgnome_2_la_LDFLAGS = -version-info $(LIB_VERSION)
libgnome_2_la_LIBADD =		\
	$(LIBGNOMESUPPORT_LIBS)	\
	$(OAF_LIBS)		\
	$(GCONF_LIBS)		\
	$(LIBXML_LIBS)		\
	$(GNOME_VFS_LIBS)	\
	$(LIBBONOBO_LIBS)	\
	$(GLIB_LIBS)

noinst_PROGRAMS = \
	test-libgnome

test_libgnome_SOURCES = test-libgnome.c
test_libgnome_LDADD = \
	libgnome-2.la

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libgnome-2.0.pc

